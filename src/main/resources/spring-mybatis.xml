<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context-3.0.xsd">


	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
        <property name="url" value="jdbc:mysql://localhost:3306/test"></property>
        <property name="username" value="root"></property>
        <property name="password" value="123456"></property>
        <property name="maxActive" value="100"></property>
        <property name="maxIdle" value="30"></property>
        <property name="maxWait" value="500"></property>
        <property name="defaultAutoCommit" value="true"></property>
    </bean>

	<!-- 
		第一种方式，通过sqlSessionFactory逐个生成Dao的bean。
		dataSource：作为数据源，是必须的。
		configLocation: 引入myBatis配置文件。如果不予以定义，依旧可以使用@Select等标签在Dao上直接定义sql
		mapperLocations: 导入多个myBatis的Mapper文件。
	 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:myBatis.xml"/>
		<!-- <property name="mapperLocations" value="classpath:mapper/*-mapper.xml"/> -->
	</bean>
	
	<!-- 
	<bean id="userDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.roadom.mybatisWithSpring.dao.*Dao" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean> 
	 -->
	
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
	    <property name="basePackage" value="com.roadom.mybatisWithSpring.dao" />  
	</bean>  
	
	
</beans>